// These match the types generated by parsing the vMix XML through xml-js.
// NB: this does NOT match the types used inside the main application, as that
// still uses fast-xml-parser.
// TODO: unify these

// Base input properties
interface BaseInputProps {
  key: string;
  number: string;
  title: string;
  shortTitle: string;
  state: "Paused" | "Running" | "Completed";
  position: string;
  duration: string;
  loop: "True" | "False";
}

// Audio properties for media inputs
interface AudioProps {
  muted: "True" | "False";
  volume: string;
  balance: string;
  solo: "True" | "False";
  audiobusses: string;
  meterF1: string;
  meterF2: string;
  gainDb: string;
}

// Specific input type properties
interface MixInputProps extends BaseInputProps {
  type: "Mix";
}

interface ColourInputProps extends BaseInputProps {
  type: "Colour";
}

interface VideoListInputProps extends BaseInputProps, AudioProps {
  type: "VideoList";
  selectedIndex: string;
}

interface VideoInputProps extends BaseInputProps, AudioProps {
  type: "Video";
}

interface ImageInputProps extends BaseInputProps {
  type: "Image";
}

interface AudioInputProps extends BaseInputProps, AudioProps {
  type: "AudioFile";
}

// Union of all input properties
type InputProps =
  | MixInputProps
  | ColourInputProps
  | VideoListInputProps
  | VideoInputProps
  | ImageInputProps
  | AudioInputProps;

// Core input structure
interface Input {
  _: string;
  $: InputProps;
  // For VideoList inputs
  list?: Array<{
    item: (string | { _: string; $?: { selected: "true" | "false" } })[];
  }>;
}

// Simple component types
interface Overlay {
  $: { number: string };
}

interface Transition {
  $: {
    number: string;
    effect: string;
    duration: string;
  };
}

interface Mix {
  $: { number: string };
  preview: string[];
  active: string[];
}

interface AudioMaster {
  $: {
    volume: string;
    muted: "True" | "False";
    meterF1: string;
    meterF2: string;
    headphonesVolume: string;
  };
}

// Main VMix state
interface VMixState {
  vmix: {
    version: string[];
    edition: string[];
    preset: string[];
    inputs: Array<{ input: Input[] }>;
    overlays: Array<{ overlay: Overlay[] }>;
    preview: string[];
    active: string[];
    fadeToBlack: string[];
    transitions: Array<{ transition: Transition[] }>;
    recording: string[];
    external: string[];
    streaming: string[];
    playList: string[];
    multiCorder: string[];
    fullscreen: string[];
    mix: Mix[];
    audio: Array<{ master: AudioMaster[] }>;
    dynamic: Array<{
      input1: string[];
      input2: string[];
      input3: string[];
      input4: string[];
      value1: string[];
      value2: string[];
      value3: string[];
      value4: string[];
    }>;
  };
}

export type {
  VMixState,
  Input,
  InputProps,
  MixInputProps,
  ColourInputProps,
  VideoListInputProps,
  VideoInputProps,
  ImageInputProps,
  AudioInputProps,
  Overlay,
  Transition,
  Mix,
  AudioMaster,
};
